In this post, We discuss the topic of regular,class and static methods in python

This is easy, So lets start coding:


class employee:
    def __init__(self, fname, lname,age):
        self.fname = fname
        self.lname = lname
        self.age = age

    def fullname(self):                     #Here we declare regular functions which takes self as an object. 
        return self.fname + self.lname      #self represents the instance of the class (our instances are emp1,emp2 and whatever we declare)

    @classmethod                            #Keyword @classmethod denotes the following is a classmethod
    def from_lname(cls):                    #Note that we donot pass in self instead we pass cls(which representes our 'class employee')
        return cls.lname                    # wherever we used self in regular methods, we use cls(shortform of class since class is reserved)

    @staticmethod                           #Keyword @staticmethod denotes the following is a staticmethod
    def from_age(age):                      #Note that we neither pass 'cls' or 'self' as arguement coz its neither associated to a class or method
        return age>50                       #This is a standalone method, But can take the arguements of the class

emp1 = employee('john', 'wick',52)
emp2 = employee('justin', 'langer', 42)


#By printing the below three lines of code we can see the real differences between these methods
#The outputs are given below each of the lines

print(emp1.fullname)                          #Our Regular method
<bound method employee.fullname of <__main__.employee object at 0x000002283C7D66D8>>

EXPLANATION:Look the above line we find "<__main__.employee object at 0x000002283C7D66D8>>" which says
an object for the class is created at the 0x000002283C7D66D8 address of the harddrive


print(emp1.from_lname)                                              #our class method
#<bound method employee.from_lname of <class '__main__.employee'>>  # Only class employee is referred here, There is no object for the method

EXPLANATION:(Here I have called classmethod on a object which is not its intended use,
Its basically called on the class. I used object here to simplifiy the concept



print(emp1.from_age)                                #Our static method, Here neither class or object is created or associated with the method
<function employee.from_age at 0x000002283C7D0400>  #Its a standalone method

EXPLANATION:Using these functions in your program makes debugging, testing and add functionality to the program much simpler
as these functions dont affect your main class anyway
